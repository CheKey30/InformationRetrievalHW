ReadMe
Shuchen Liu(shl174@pitt.edu)

How to run the program:
please make sure that "topics.txt" is in the "data" folder and "result.trectext", "result.trecweb", "stopword.txt" 
are in the "data/input" folder.
Then you can run the main function in the "HW2MainLucene" class to generate the indexing.
Then you can run the main function in the "HW3Main" to generate the result.

Running time:
It takes about 0.35min to finish 4 queries.

Retrieval results:
901 hong kong economics singapore
901 Q0 NYT19990114.0111 1 0.008116928392468487 MYRUN
901 Q0 NYT20000715.0019 2 0.005442260105739273 MYRUN
901 Q0 NYT19981229.0172 3 0.005053204204623799 MYRUN
901 Q0 NYT19980923.0149 4 0.004872803951355808 MYRUN
901 Q0 NYT19980923.0086 5 0.004872803951355808 MYRUN
901 Q0 XIE19970423.0098 6 0.00474504735017016 MYRUN
901 Q0 NYT19990312.0452 7 0.00436849451344934 MYRUN
901 Q0 NYT20000925.0162 8 0.004223949256664409 MYRUN
901 Q0 NYT19990110.0053 9 0.003996046294119623 MYRUN
901 Q0 XIE19960522.0115 10 0.0036072270345825323 MYRUN
901 Q0 XIE19970421.0223 11 0.0033746733072031417 MYRUN
901 Q0 XIE19960603.0042 12 0.0033188852867010554 MYRUN
901 Q0 NYT20000410.0370 13 0.0032639610215315713 MYRUN
901 Q0 XIE19970421.0178 14 0.003248303352725906 MYRUN
901 Q0 XIE19960514.0416 15 0.0032261357467995183 MYRUN
901 Q0 XIE19960509.0095 16 0.0031815963669541494 MYRUN
901 Q0 XIE19970430.0087 17 0.0031757505307263975 MYRUN
901 Q0 XIE19970505.0240 18 0.0031297459961029278 MYRUN
901 Q0 NYT19990211.0382 19 0.0029696027692080024 MYRUN
901 Q0 XIE19960114.0024 20 0.0028874365845453446 MYRUN
902 homosexual acceptance europe
902 Q0 NYT19980627.0028 1 9.03004451872572E-4 MYRUN
902 Q0 NYT19980804.0050 2 6.464624631214437E-4 MYRUN
902 Q0 NYT19980731.0080 3 6.464624631214437E-4 MYRUN
903 star trek "the generation"
903 Q0 NYT19990929.0151 1 0.020046828319118533 MYRUN
903 Q0 NYT19990613.0097 2 0.019052055432621753 MYRUN
903 Q0 NYT20000612.0242 3 0.01879337193515443 MYRUN
903 Q0 NYT20000501.0225 4 0.01861951170822263 MYRUN
903 Q0 NYT19990114.0241 5 0.01779074890651882 MYRUN
903 Q0 NYT20000828.0301 6 0.015021388574516875 MYRUN
903 Q0 NYT19981105.0361 7 0.014285359561207972 MYRUN
903 Q0 NYT19981105.0358 8 0.014285359561207972 MYRUN
903 Q0 NYT20000424.0197 9 0.013154265962279782 MYRUN
903 Q0 NYT19980719.0183 10 0.01313820238475256 MYRUN
903 Q0 NYT19990301.0215 11 0.012677171418151419 MYRUN
903 Q0 NYT19981112.0231 12 0.012461459715137823 MYRUN
903 Q0 NYT19990812.0218 13 0.012441986263832954 MYRUN
903 Q0 NYT19990610.0283 14 0.011853418850750507 MYRUN
903 Q0 NYT19981019.0221 15 0.011786445009750145 MYRUN
903 Q0 NYT19990709.0078 16 0.011700844526427823 MYRUN
903 Q0 NYT20000725.0006 17 0.011670332920560078 MYRUN
903 Q0 NYT19990419.0260 18 0.011655864122122935 MYRUN
903 Q0 NYT20000118.0372 19 0.01134039351346365 MYRUN
903 Q0 NYT19990428.0151 20 0.011300850186608641 MYRUN
904 progressive dysphagia

How to tune miu:
You can change the value of miu in the "QueryRetrievalModel" class line 18. I set miu as 2000.
According to the function of Dirichlet smoothing method. When the miu is small, matched words would dominate
the score. When the miu is large, it is not obvious which term would dominate the score.
For example, consider a query with 4 tokens "a b c d". The documents includes all of those tokens would be ranked at
the top level. With a large miu, those documents with 2 or three of those tokens would be ranked higher.


Java version:
I use JDK 1.11 to do this assignment.